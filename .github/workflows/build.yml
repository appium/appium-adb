name: Build

on: [pull_request, push]


jobs:
  unit_test:
    strategy:
      matrix:
        node: [14, 16, 18]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node }}
    - run: npm i -g npm
      name: Update NPM
    - run: npm install --no-package-lock
      name: Install dev dependencies
    - run: npm run build
      name: Build
    - run: npm run lint
      name: Run linter
    - run: npm run test
      name: Run unit tests

  e2e_test:
    strategy:
      matrix:
        include:
        - platformVersion: "11.0"
          apiLevel: 30
          emuTag: google_apis
        - platformVersion: "9.0"
          apiLevel: 28
          emuTag: default
        - platformVersion: "7.1"
          apiLevel: 25
          emuTag: default
        - platformVersion: "5.1"
          apiLevel: 22
          emuTag: default
    env:
      CI: true
      ANDROID_AVD: emulator
      ANDROID_SDK_VERSION: "${{ matrix.apiLevel }}"
      PLATFORM_VERSION: "${{ matrix.platformVersion }}"
      EMU_TAG: "${{ matrix.emuTag }}"
    # No hardware acceleration is available for emulators on Ubuntu:
    # https://github.com/marketplace/actions/android-emulator-runner#can-i-use-this-action-on-linux-vms
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: lts/*
        check-latest: true
    - run: npm install --no-package-lock
      name: Install dev dependencies
    - uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'
    - name: AVD cache
      uses: actions/cache@v3
      id: avd-cache
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: avd-${{ matrix.apiLevel }}
    # https://github.com/marketplace/actions/android-emulator-runner
    - uses: reactivecircus/android-emulator-runner@v2
      if: steps.avd-cache.outputs.cache-hit != 'true'
      name: Generate AVD snapshot for caching
      with:
        script: echo "Generated AVD snapshot for caching."
        avd-name: $ANDROID_AVD
        force-avd-creation: false
        sdcard-path-or-size: 1500M
        api-level: ${{ matrix.apiLevel }}
        disable-spellchecker: true
        target: ${{ matrix.emuTag }}
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
    - run: nohup adb logcat > logcat.log &
      name: Capture Logcat
    - uses: reactivecircus/android-emulator-runner@v2
      name: api${{ matrix.apiLevel }}_e2e
      with:
        script: npm run e2e-test
        avd-name: $ANDROID_AVD
        force-avd-creation: false
        sdcard-path-or-size: 1500M
        api-level: ${{ matrix.apiLevel }}
        disable-spellchecker: true
        target: ${{ matrix.emuTag }}
        emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
    - name: Save logcat output
      if: ${{ always() }}
      uses: actions/upload-artifact@master
      with:
        name: logcat-api${{ matrix.apiLevel }}
        path: logcat.log
